{"version":3,"sources":["sound/BeepSound.wav","Pomodoro.js","App.js","index.js"],"names":["Pomodoro","useState","label","setLabel","sessionMinutes","setSessionMinutes","count","setCount","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","timerMinutes","timerSeconds","useSound","BeepSound","play","stop","useEffect","interval","setInterval","clearInterval","className","id","Button","variant","onClick","prevCount","src","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.304a0c0b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BeepSound.372995a9.wav\";","import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport useSound from 'use-sound';\r\nimport BeepSound from './sound/BeepSound.wav';\r\n\r\nconst Pomodoro = () => {\r\n    const [label, setLabel] = useState('Study');\r\n    const [sessionMinutes, setSessionMinutes] = useState(25);\r\n    const [count, setCount] = useState(5);\r\n    const [minutes, setMinutes] = useState(25);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\r\n    const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\r\n    const [play, {stop}] = useSound(BeepSound);\r\n\r\n    const Increment = () => {\r\n        setCount((prevCount) => prevCount + 1)\r\n        if (count === 60) {\r\n            setCount(60);\r\n        }\r\n    }\r\n\r\n    const Decrement = () => {\r\n        setCount((prevCount) => prevCount - 1)\r\n        if (count === 1) {\r\n            setCount(1);\r\n        }\r\n    }\r\n\r\n    const sessionIncrement = () => {\r\n        if(!isRunning) {\r\n            setSessionMinutes((prevCount) => prevCount + 1)\r\n                if (sessionMinutes === 60) {\r\n                     setSessionMinutes(60);\r\n        }        else {\r\n                    setMinutes(sessionMinutes + 1);\r\n                    setSeconds(0);\r\n        }\r\n        }\r\n    }\r\n\r\n    const sessionDecrement = () => {\r\n        if(!isRunning) {\r\n            setSessionMinutes((prevCount) => prevCount - 1)\r\n        if (sessionMinutes === 1) {\r\n            setSessionMinutes(1);\r\n            setMinutes(1);\r\n        } else {\r\n            setMinutes(sessionMinutes - 1);\r\n            setSeconds(0);\r\n        }\r\n        }\r\n    }\r\n\r\n    const twentyFive = () => {\r\n        setIsRunning(false);\r\n        setMinutes(25);\r\n        setSeconds(0);\r\n        setSessionMinutes(25);\r\n        setCount(5);\r\n        setLabel('Study');\r\n        stop();\r\n    }\r\n    const breakTime = () => {\r\n        setIsRunning(true);\r\n        setMinutes(count);\r\n        setSeconds(0);\r\n        setLabel('Break');\r\n    }\r\n\r\n    const studyTime = () => {\r\n        setIsRunning(true);\r\n        setMinutes(sessionMinutes);\r\n        setSeconds(0);\r\n        setLabel('Study');\r\n    }\r\n    useEffect(() => {\r\n        if (isRunning) {\r\n            let interval = setInterval(() => {\r\n            clearInterval(interval);\r\n            if (seconds === 0) {\r\n                if (minutes !== 0) {\r\n                    setSeconds(59);\r\n                    setMinutes(minutes - 1);\r\n                }\r\n                else {\r\n                    setSeconds(seconds);\r\n                    setMinutes(minutes);\r\n                }\r\n            }\r\n            else {\r\n                setSeconds(seconds - 1)\r\n            }\r\n        }, 1000) \r\n        if (seconds === 0 && minutes === 0) {\r\n            if (label === 'Study') {\r\n                setMinutes(count);\r\n                setIsRunning(true);\r\n                setLabel('Break')\r\n                play();\r\n            } if (label === 'Break') {\r\n                setMinutes(sessionMinutes);\r\n                setIsRunning(true);\r\n                setLabel('Study');\r\n                play();\r\n            }\r\n    }\r\n        return () => clearInterval(interval)     \r\n        }\r\n    }, [isRunning, minutes, seconds, count, label, setLabel, sessionMinutes, play]);\r\n    return (\r\n        <div>\r\n            <div className=\"timer\">\r\n                <div className=\"digits\">\r\n                <p id=\"timer-label\">{label}</p>         \r\n                <p id=\"time-left\">{timerMinutes}:{timerSeconds}</p>\r\n                </div>\r\n                <Button variant=\"contained\" id=\"start_stop\" onClick={() => setIsRunning(true)}>Start</Button>\r\n                <Button variant=\"outlined\" id=\"reset\" onClick={() => twentyFive()}>Reset</Button>\r\n                <Button variant=\"contained\" id=\"start_stop\" onClick={() => setIsRunning(false)}>Pause</Button>\r\n            </div>\r\n            <div className='menu'>\r\n            <div className='labels'>\r\n                <p id=\"break-label\">Break Length</p>\r\n                <p id=\"session-label\">Study Length</p>\r\n            </div>\r\n            <div className=\"break\">\r\n                <div className='container'>\r\n                <Button variant=\"outlined\" id=\"break-decrement\" onClick={() => Decrement()}>-</Button>\r\n                <span className=\"break-digit\" id=\"break-length\">{count}</span>\r\n                <Button variant=\"outlined\" id=\"break-increment\" onClick={() => Increment()}>+</Button>\r\n                </div>\r\n                <Button variant=\"contained\" onClick={() => breakTime()}>Set Break Time</Button>\r\n                </div>\r\n                <div className='study'>\r\n                <div className='container'>\r\n                <Button variant=\"outlined\" id=\"session-decrement\" onClick={() => sessionDecrement()}>-</Button>\r\n                <span className=\"break-digit\" id=\"session-length\">{sessionMinutes}</span>\r\n                <Button variant=\"outlined\" id=\"session-increment\" onClick={() => sessionIncrement()}>+</Button>\r\n                </div>\r\n                <Button variant=\"contained\" onClick={() => studyTime()}>Set Study Time</Button>\r\n            </div>\r\n            </div>\r\n            <audio id=\"beep\" src={BeepSound}></audio>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pomodoro","import React from 'react';\nimport './App.css';\nimport Pomodoro from './Pomodoro';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pomodoro />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}